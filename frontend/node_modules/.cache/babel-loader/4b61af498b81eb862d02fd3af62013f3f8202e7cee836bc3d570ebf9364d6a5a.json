{"ast":null,"code":"var _jsxFileName = \"/home/tashfia/Documents/linkedin/src/Components/Post/PostMain.js\",\n  _s = $RefreshSig$();\n// Home.js\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../../Hooks/AuthContext'; // Import your AuthContext\nimport PostList from '../PostList/PostList'; // Create a PostList component to display recent posts\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const authContext = useContext(AuthContext);\n  const [content, setContent] = useState('');\n  const [imageFile, setImageFile] = useState(null);\n  const handlePostSubmit = async () => {\n    const formData = new FormData();\n    formData.append('username', authContext.username);\n    formData.append('texts', content);\n    if (imageFile) {\n      formData.append('image_file', imageFile);\n    }\n    try {\n      await axios.post('http://localhost:8000/post', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data' // Important for file upload\n        }\n      });\n\n      setContent('');\n      setImageFile(null);\n      alert('Post created successfully!');\n    } catch (error) {\n      console.error('Error creating post:', error);\n      alert('An error occurred while creating the post.');\n    }\n  };\n  useEffect(() => {\n    // Fetch recent posts using the /getpost endpoint and display them\n    // You can create a PostList component for this purpose\n  }, []); // Make sure to run this effect only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [authContext.isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: authContext.logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Logged in as \", authContext.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-btn\",\n          children: \"Login/Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"Write something...\",\n        rows: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setImageFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePostSubmit,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recent Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"vcJ0YKVDqU4CTZO5IDfKxub6c7A=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useContext","useEffect","axios","AuthContext","PostList","jsxDEV","_jsxDEV","Home","_s","authContext","content","setContent","imageFile","setImageFile","handlePostSubmit","formData","FormData","append","username","post","headers","alert","error","console","children","isLoggedIn","onClick","logout","fileName","_jsxFileName","lineNumber","columnNumber","Link","to","className","value","onChange","e","target","placeholder","rows","type","files","_c","$RefreshReg$"],"sources":["/home/tashfia/Documents/linkedin/src/Components/Post/PostMain.js"],"sourcesContent":["// Home.js\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../../Hooks/AuthContext'; // Import your AuthContext\nimport PostList from '../PostList/PostList';// Create a PostList component to display recent posts\n\nfunction Home() {\n  const authContext = useContext(AuthContext);\n  const [content, setContent] = useState('');\n  const [imageFile, setImageFile] = useState(null);\n\n  const handlePostSubmit = async () => {\n    const formData = new FormData();\n    formData.append('username', authContext.username);\n    formData.append('texts', content);\n    if (imageFile) {\n      formData.append('image_file', imageFile);\n    }\n\n    try {\n      await axios.post('http://localhost:8000/post', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data', // Important for file upload\n        },\n      });\n      setContent('');\n      setImageFile(null);\n      alert('Post created successfully!');\n    } catch (error) {\n      console.error('Error creating post:', error);\n      alert('An error occurred while creating the post.');\n    }\n  };\n\n  useEffect(() => {\n    // Fetch recent posts using the /getpost endpoint and display them\n    // You can create a PostList component for this purpose\n  }, []); // Make sure to run this effect only once when the component mounts\n\n  return (\n    <div>\n      {authContext.isLoggedIn ? (\n        <div>\n          <button onClick={authContext.logout}>Logout</button>\n          <span>Logged in as {authContext.username}</span>\n        </div>\n      ) : (\n        <div>\n            <Link to=\"/login\">\n                     <button className=\"login-btn\">Login/Signup</button>\n                   </Link>\n                  </div>\n      )}\n\n      <div>\n        <h2>Create a New Post</h2>\n        <textarea\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          placeholder=\"Write something...\"\n          rows=\"4\"\n        />\n        <input type=\"file\" onChange={(e) => setImageFile(e.target.files[0])} />\n        <button onClick={handlePostSubmit}>Post</button>\n      </div>\n\n      <div>\n        <h2>Recent Posts</h2>\n        <PostList />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}