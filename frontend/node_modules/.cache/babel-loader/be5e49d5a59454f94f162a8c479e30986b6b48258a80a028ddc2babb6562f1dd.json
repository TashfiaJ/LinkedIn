{"ast":null,"code":"import _regeneratorRuntime from\"/home/tashfia/Documents/linkedin/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/tashfia/Documents/linkedin/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/tashfia/Documents/linkedin/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState,useContext}from'react';import axios from'axios';import{AuthContext}from'../../Hooks/AuthContext';import\"./Notification.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NotificationsList=function NotificationsList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),notifications=_useState2[0],setNotifications=_useState2[1];var authContext=useContext(AuthContext);var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),username=_useState4[0],setUsername=_useState4[1];// You can set the initial value of username here\nuseEffect(function(){// Assuming you have a way to get the username from your AuthContext or some other source\nvar user=authContext.username;// Replace this with the actual way to get the username\n// Check if the user is available\nif(user){setUsername(user);// Fetch notifications when the component mounts\nfetchNotifications(user);}},[]);var fetchNotifications=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(username){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:console.log(username);_context.prev=1;_context.next=4;return axios.get(\"http://localhost:8003/notification/get_notification?user_id=\".concat(username),{});case 4:response=_context.sent;setNotifications(response.data);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);console.error('Error fetching notifications:',_context.t0);case 11:case\"end\":return _context.stop();}},_callee,null,[[1,8]]);}));return function fetchNotifications(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Notifications\"}),/*#__PURE__*/_jsx(\"ul\",{children:notifications.map(function(notification,index){return/*#__PURE__*/_jsx(\"li\",{children:notification},index);})})]});};export default NotificationsList;","map":{"version":3,"names":["React","useEffect","useState","useContext","axios","AuthContext","jsx","_jsx","jsxs","_jsxs","NotificationsList","_useState","_useState2","_slicedToArray","notifications","setNotifications","authContext","_useState3","_useState4","username","setUsername","user","fetchNotifications","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","console","log","get","concat","sent","data","t0","error","stop","_x","apply","arguments","children","map","notification","index"],"sources":["/home/tashfia/Documents/linkedin/frontend/src/Components/Notification/Notification.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../../Hooks/AuthContext';\nimport \"./Notification.css\";\n\nconst NotificationsList = () => {\n  const [notifications, setNotifications] = useState([]);\n  const authContext = useContext(AuthContext);\n  const [username, setUsername] = useState(\"\"); // You can set the initial value of username here\n\n  useEffect(() => {\n    // Assuming you have a way to get the username from your AuthContext or some other source\n    const user = authContext.username; // Replace this with the actual way to get the username\n    // Check if the user is available\n    if (user ) {\n      setUsername(user);\n      // Fetch notifications when the component mounts\n      fetchNotifications(user);\n    }\n  }, []);\n\n  const fetchNotifications = async (username) => {\n\n    console.log(username);\n    \n    try {\n      const response = await axios.get(`http://localhost:8003/notification/get_notification?user_id=${username}`, {\n      });\n      setNotifications(response.data);\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Notifications</h1>\n      <ul>\n        {notifications.map((notification, index) => (\n          <li key={index}>{notification}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default NotificationsList;\n"],"mappings":"6YAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAC9D,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,yBAAyB,CACrD,MAAO,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE5B,GAAM,CAAAC,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAA,CAAS,CAC9B,IAAAC,SAAA,CAA0CT,QAAQ,CAAC,EAAE,CAAC,CAAAU,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/CG,aAAa,CAAAF,UAAA,IAAEG,gBAAgB,CAAAH,UAAA,IACtC,GAAM,CAAAI,WAAW,CAAGb,UAAU,CAACE,WAAW,CAAC,CAC3C,IAAAY,UAAA,CAAgCf,QAAQ,CAAC,EAAE,CAAC,CAAAgB,UAAA,CAAAL,cAAA,CAAAI,UAAA,IAArCE,QAAQ,CAAAD,UAAA,IAAEE,WAAW,CAAAF,UAAA,IAAkB;AAE9CjB,SAAS,CAAC,UAAM,CACd;AACA,GAAM,CAAAoB,IAAI,CAAGL,WAAW,CAACG,QAAQ,CAAE;AACnC;AACA,GAAIE,IAAI,CAAG,CACTD,WAAW,CAACC,IAAI,CAAC,CACjB;AACAC,kBAAkB,CAACD,IAAI,CAAC,CAC1B,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAC,kBAAkB,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOR,QAAQ,MAAAS,QAAA,QAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAExCC,OAAO,CAACC,GAAG,CAAChB,QAAQ,CAAC,CAACY,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAGG,CAAA7B,KAAK,CAACgC,GAAG,gEAAAC,MAAA,CAAgElB,QAAQ,EAAI,CAC5G,CAAC,CAAC,QADIS,QAAQ,CAAAG,QAAA,CAAAO,IAAA,CAEdvB,gBAAgB,CAACa,QAAQ,CAACW,IAAI,CAAC,CAACR,QAAA,CAAAE,IAAA,iBAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAS,EAAA,CAAAT,QAAA,aAEhCG,OAAO,CAACO,KAAK,CAAC,+BAA+B,CAAAV,QAAA,CAAAS,EAAO,CAAC,CAAC,yBAAAT,QAAA,CAAAW,IAAA,MAAAf,OAAA,gBAEzD,kBAXK,CAAAL,kBAAkBA,CAAAqB,EAAA,SAAApB,IAAA,CAAAqB,KAAA,MAAAC,SAAA,OAWvB,CAED,mBACEpC,KAAA,QAAAqC,QAAA,eACEvC,IAAA,OAAAuC,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBvC,IAAA,OAAAuC,QAAA,CACGhC,aAAa,CAACiC,GAAG,CAAC,SAACC,YAAY,CAAEC,KAAK,qBACrC1C,IAAA,OAAAuC,QAAA,CAAiBE,YAAY,EAApBC,KAAyB,CAAC,EACpC,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAAvC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}