{"ast":null,"code":"// import React, { useState, useContext, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n// import { AuthContext } from '../../Hooks/AuthContext';\n// import PostsList from '../PostList/PostList';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faBell } from '@fortawesome/free-solid-svg-icons';\n// function Post() {\n//   const [content, setContent] = useState('');\n//   const [imageFile, setImageFile] = useState(null); // Store the selected image file\n//   const [postCounter, setPostCounter] = useState(0); // State to track successful posts\n//   const authContext = useContext(AuthContext);\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       let imageData = null;\n//       if (imageFile) {\n//         const reader = new FileReader();\n//         reader.onload = (event) => {\n//           imageData = event.target.result;\n//           createPost(imageData);\n//         };\n//         reader.readAsDataURL(imageFile);\n//       } else {\n//         createPost(imageData);\n//       }\n//     } catch (error) {\n//       console.error('Error creating post:', error);\n//       alert('An error occurred while creating the post.');\n//     }\n//   };\n//   const createPost = async (imageData) => {\n//     const postData = {\n//       username: authContext.username,\n//       texts: content,\n//       image_file: imageData,\n//     };\n//     console.log('Post Data:', postData); // Log the postData\n//     try {\n//       await axios.post(\"http://localhost:8000/post\", postData.username, postData.texts, postData.image_file {\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n//       setContent('');\n//       setImageFile(null); // Reset the image file state\n//       setPostCounter((prevCounter) => prevCounter + 1); // Increment the counter\n//       alert('Post created successfully!');\n//     } catch (error) {\n//       console.error('Error creating post:', error);\n//       alert('An error occurred while creating the post.');\n//     }\n//   };\n//   useEffect(() => {\n//     // You can use this effect to perform additional actions when the counter changes\n//     // For example, update UI elements or make additional API requests\n//   }, [postCounter]);\n//   const handleImageChange = (e) => {\n//     setImageFile(e.target.files[0]);\n//   };\n//   const handleLogout = () => {\n//     authContext.logout();\n//   };\n//   return (\n//     <div className=\"post-form\">\n//       <div className=\"row independent\">\n//         {authContext.token ? (\n//           <div>\n//   <button className=\"login-btn\" onClick={handleLogout}>\n//     Logout\n//   </button>\n//   <button className=\"login-btn\">{authContext.username}</button>\n//   <Link to=\"/post\">\n//     <button className=\"login-btn\">Feed</button>\n//   </Link>\n//   <Link to=\"/notification\" className=\"notification-icon\">\n//   <div className=\"notification-box\">\n//     <FontAwesomeIcon\n//       icon={faBell}\n//       size=\"lg\"\n//       style={{\n//         color: \"#FF914D\",\n//         marginTop: \"27px\",\n//         marginLeft: \"1200px\"\n//       }}\n//     />\n//     {postCounter > 0 && (\n//       <span className=\"notification-counter\" style={{\n//         marginTop: \"27px\",\n//         marginLeft: \"1250px\"\n//       }}>{postCounter}</span>\n//     )}\n//   </div>\n// </Link>\n// </div>\n//         ) : (\n//           <div>\n//         <Link to=\"/login\">\n//             <button className=\"login-btn\">Login/Signup</button>\n//           </Link>\n//           </div>\n//         )}\n//       </div>\n//       <h2 className='head-main'>Create a New Post</h2>\n//       <div className='poster d-flex justify-content-center align-items-center'>\n//       <form onSubmit={handleSubmit} className=\"border p-3 shadow rounded\">\n//         <div className=\"mb-3\">\n//           <textarea\n//             value={content}\n//             onChange={(e) => setContent(e.target.value)}\n//             placeholder=\"Write something...\"\n//             className=\"form-control\"\n//             rows=\"4\"\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <input type=\"file\" onChange={handleImageChange} className=\"form-control\" />\n//         </div>\n//         <button type=\"submit\" className=\"btn-xtra\">\n//           Post\n//         </button>\n//       </form>\n//       </div>\n//       <PostsList key={postCounter}/>\n//     </div>\n//   );\n// }\n// export default Post","map":{"version":3,"names":[],"sources":["/home/tashfia/Documents/linkedin/frontend/src/Components/Post/Post.js"],"sourcesContent":["// import React, { useState, useContext, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n// import { AuthContext } from '../../Hooks/AuthContext';\n// import PostsList from '../PostList/PostList';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faBell } from '@fortawesome/free-solid-svg-icons';\n\n// function Post() {\n//   const [content, setContent] = useState('');\n//   const [imageFile, setImageFile] = useState(null); // Store the selected image file\n//   const [postCounter, setPostCounter] = useState(0); // State to track successful posts\n//   const authContext = useContext(AuthContext);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       let imageData = null;\n//       if (imageFile) {\n//         const reader = new FileReader();\n//         reader.onload = (event) => {\n//           imageData = event.target.result;\n//           createPost(imageData);\n//         };\n//         reader.readAsDataURL(imageFile);\n//       } else {\n//         createPost(imageData);\n//       }\n//     } catch (error) {\n//       console.error('Error creating post:', error);\n//       alert('An error occurred while creating the post.');\n//     }\n//   };\n\n//   const createPost = async (imageData) => {\n//     const postData = {\n//       username: authContext.username,\n//       texts: content,\n//       image_file: imageData,\n//     };\n    \n//     console.log('Post Data:', postData); // Log the postData\n  \n//     try {\n//       await axios.post(\"http://localhost:8000/post\", postData.username, postData.texts, postData.image_file {\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n      \n//       setContent('');\n//       setImageFile(null); // Reset the image file state\n//       setPostCounter((prevCounter) => prevCounter + 1); // Increment the counter\n//       alert('Post created successfully!');\n//     } catch (error) {\n//       console.error('Error creating post:', error);\n//       alert('An error occurred while creating the post.');\n//     }\n//   };\n  \n\n//   useEffect(() => {\n//     // You can use this effect to perform additional actions when the counter changes\n//     // For example, update UI elements or make additional API requests\n//   }, [postCounter]);\n\n//   const handleImageChange = (e) => {\n//     setImageFile(e.target.files[0]);\n//   };\n\n//   const handleLogout = () => {\n//     authContext.logout();\n//   };\n\n//   return (\n//     <div className=\"post-form\">\n//       <div className=\"row independent\">\n//         {authContext.token ? (\n//           <div>\n//   <button className=\"login-btn\" onClick={handleLogout}>\n//     Logout\n//   </button>\n//   <button className=\"login-btn\">{authContext.username}</button>\n//   <Link to=\"/post\">\n//     <button className=\"login-btn\">Feed</button>\n//   </Link>\n//   <Link to=\"/notification\" className=\"notification-icon\">\n//   <div className=\"notification-box\">\n//     <FontAwesomeIcon\n//       icon={faBell}\n//       size=\"lg\"\n//       style={{\n//         color: \"#FF914D\",\n//         marginTop: \"27px\",\n//         marginLeft: \"1200px\"\n//       }}\n//     />\n//     {postCounter > 0 && (\n//       <span className=\"notification-counter\" style={{\n//         marginTop: \"27px\",\n//         marginLeft: \"1250px\"\n//       }}>{postCounter}</span>\n//     )}\n//   </div>\n// </Link>\n\n// </div>\n//         ) : (\n//           <div>\n//         <Link to=\"/login\">\n//             <button className=\"login-btn\">Login/Signup</button>\n//           </Link>\n//           </div>\n//         )}\n//       </div>\n//       <h2 className='head-main'>Create a New Post</h2>\n//       <div className='poster d-flex justify-content-center align-items-center'>\n//       <form onSubmit={handleSubmit} className=\"border p-3 shadow rounded\">\n//         <div className=\"mb-3\">\n//           <textarea\n//             value={content}\n//             onChange={(e) => setContent(e.target.value)}\n//             placeholder=\"Write something...\"\n//             className=\"form-control\"\n//             rows=\"4\"\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <input type=\"file\" onChange={handleImageChange} className=\"form-control\" />\n//         </div>\n//         <button type=\"submit\" className=\"btn-xtra\">\n//           Post\n//         </button>\n//       </form>\n//       </div>\n//       <PostsList key={postCounter}/>\n//     </div>\n//   );\n// }\n\n// export default Post"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}