{"ast":null,"code":"import _regeneratorRuntime from\"/home/tashfia/Documents/linkedin/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/tashfia/Documents/linkedin/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/tashfia/Documents/linkedin/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './PostList.css';\n// function PostsList({ key }) { // Accept the key prop\n//   const [posts, setPosts] = useState([]);\n//   useEffect(() => {\n//     fetchPosts();\n//   }, [key]); // Include the key prop in the dependency array\n//   const fetchPosts = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:8000/getpost');\n//       // Sort posts by creation timestamp in descending order\n//       const sortedPosts = response.data.posts.sort((a, b) => {\n//         const timestampA = new Date(a.created_at).getTime();\n//         const timestampB = new Date(b.created_at).getTime();\n//         return timestampB - timestampA;\n//       });\n//       setPosts(sortedPosts);\n//     } catch (error) {\n//       console.error('Error fetching posts:', error);\n//     }\n//   };\n//   return (\n//     <>\n//       <div className=\"posts-list\">\n//         <h2 className=\"head-main text-left\">Recent Posts</h2>\n//       </div>\n//       <div className=\"container mt-4\">\n//         <ul className=\"list-group\">\n//           {posts.map((post, index) => (\n//             <li key={index} className=\"list-group-item post\">\n//               <div className=\"d-flex align-items-start\">\n//                 <div className=\"post-content\">\n//                   <div className=\"d-flex justify-content-between\">\n//                     <h5 className=\"mb-1\">\n//                       <span className=\"text-bold text-xtra\" style={{ color: '#FF914D' }}>{post.email}</span>\n//                     </h5>\n//                     <small>{post.created_at}</small>\n//                   </div>\n//                   <p className=\"mb-2 text-center my-2\">{post.content}</p>\n//                   <div className=\"d-flex flex-column align-items-center\">\n//                     {post.image && (\n//                       <img\n//                         src={post.image}\n//                         alt=\"Post\"\n//                         className=\"img-fluid rounded\"\n//                       />\n//                     )}\n//                   </div>\n//                 </div>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     </>\n//   );\n// }\n// export default PostsList;\nimport React,{useState,useContext,useEffect}from'react';import axios from'axios';import{AuthContext}from'../../Hooks/AuthContext';// Import your AuthContext\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PostList(){var authContext=useContext(AuthContext);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPosts=_useState2[1];console.log(\"kireee\");var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),username=_useState4[0],setUsername=_useState4[1];// You can set the initial value of username here\nuseEffect(function(){// Assuming you have a way to get the username from your AuthContext or some other source\nvar user=authContext.username;// Replace this with the actual way to get the username\n// Check if the user is available\nif(user){setUsername(user);fetchData(user);}},[]);// Fetch recent posts excluding the logged-in user's posts\nvar fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(username){var response,_posts;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"http://post-service:8000/post/getpost?user_id=\".concat(username),{});case 3:response=_context.sent;_posts=response.data;console.log(_posts);setPosts(_posts);// Update your state to store and display the posts\n_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.error('Error fetching posts:',_context.t0);case 12:case\"end\":return _context.stop();}},_callee,null,[[0,9]]);}));return function fetchData(_x){return _ref.apply(this,arguments);};}();// The empty dependency array ensures this effect runs only once on component mount\nreturn/*#__PURE__*/_jsx(\"div\",{children:posts.map(function(post){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:post.username}),/*#__PURE__*/_jsx(\"p\",{children:post.texts}),post.image_url&&/*#__PURE__*/_jsx(\"img\",{src:post.image_url,alt:\"Post\"})]},post.id);})});}export default PostList;","map":{"version":3,"names":["React","useState","useContext","useEffect","axios","AuthContext","jsx","_jsx","jsxs","_jsxs","PostList","authContext","_useState","_useState2","_slicedToArray","posts","setPosts","console","log","_useState3","_useState4","username","setUsername","user","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_posts","wrap","_callee$","_context","prev","next","get","concat","sent","data","t0","error","stop","_x","apply","arguments","children","map","post","texts","image_url","src","alt","id"],"sources":["/home/tashfia/Documents/linkedin/frontend/src/Components/PostList/PostList.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './PostList.css';\n\n// function PostsList({ key }) { // Accept the key prop\n//   const [posts, setPosts] = useState([]);\n\n//   useEffect(() => {\n//     fetchPosts();\n//   }, [key]); // Include the key prop in the dependency array\n\n//   const fetchPosts = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:8000/getpost');\n      \n//       // Sort posts by creation timestamp in descending order\n//       const sortedPosts = response.data.posts.sort((a, b) => {\n//         const timestampA = new Date(a.created_at).getTime();\n//         const timestampB = new Date(b.created_at).getTime();\n//         return timestampB - timestampA;\n//       });\n      \n//       setPosts(sortedPosts);\n//     } catch (error) {\n//       console.error('Error fetching posts:', error);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <div className=\"posts-list\">\n//         <h2 className=\"head-main text-left\">Recent Posts</h2>\n//       </div>\n//       <div className=\"container mt-4\">\n//         <ul className=\"list-group\">\n//           {posts.map((post, index) => (\n//             <li key={index} className=\"list-group-item post\">\n//               <div className=\"d-flex align-items-start\">\n//                 <div className=\"post-content\">\n//                   <div className=\"d-flex justify-content-between\">\n//                     <h5 className=\"mb-1\">\n//                       <span className=\"text-bold text-xtra\" style={{ color: '#FF914D' }}>{post.email}</span>\n//                     </h5>\n//                     <small>{post.created_at}</small>\n//                   </div>\n//                   <p className=\"mb-2 text-center my-2\">{post.content}</p>\n//                   <div className=\"d-flex flex-column align-items-center\">\n//                     {post.image && (\n//                       <img\n//                         src={post.image}\n//                         alt=\"Post\"\n//                         className=\"img-fluid rounded\"\n//                       />\n//                     )}\n//                   </div>\n//                 </div>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default PostsList;\n\n\n\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../../Hooks/AuthContext'; // Import your AuthContext\n\n\nfunction PostList() {\n  const authContext = useContext(AuthContext);\n  const [posts, setPosts] = useState([]);\n  console.log(\"kireee\");\n\n  const [username, setUsername] = useState(\"\"); // You can set the initial value of username here\n\n  useEffect(() => {\n    // Assuming you have a way to get the username from your AuthContext or some other source\n    const user = authContext.username; // Replace this with the actual way to get the username\n    // Check if the user is available\n    if (user ) {\n      setUsername(user);\n      fetchData(user);\n    }\n  }, []);\n\n    // Fetch recent posts excluding the logged-in user's posts\n    const fetchData = async (username) => {\n      try {\n        const response = await axios.get(`http://post-service:8000/post/getpost?user_id=${username}`, { },\n        );\n        const posts = response.data;\n        console.log(posts);\n        setPosts(posts);\n        // Update your state to store and display the posts\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n\n \n// The empty dependency array ensures this effect runs only once on component mount\n\n  return (\n    <div>\n    {posts.map((post) => (\n      <div key={post.id}>\n        <h4>{post.username}</h4>\n        <p>{post.texts}</p>\n        {post.image_url && (\n          <img src={post.image_url} alt=\"Post\" />\n        )}\n      </div>\n    ))}\n  </div>\n  );\n}\n\nexport default PostList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}